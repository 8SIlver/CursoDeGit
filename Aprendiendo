
Clase 1
-Git .- Es un control de versiones
-Repositorio = carpeta donde se almacena las versiones de un proyect:
           repoLocal - repoRemoto

Clase 2
-Estados en Git:
     Modified (archivo modificado), 
     Staged   (confirmacion cambios guardado, preparado para repositorio local), 
     Commited (comentario y listo esta en repo.Local)
     finalmente hemos hecho un COMMIT=fotoDeCambio(s)     
 (archivo traqueado = se le esta haciendo seguimiento de modificaciones)
 -HEAD .- Donde estas en un mapa, solo puedes estar en uno, y ese es head=cabeza=estasAqui,
          es un puntero
 -Rama .-  Es un camino paralelo del codigo, es un puntero, se usa para avanzar en otra cosa y esto lo hace no   lineal, esto da paso al desarrollo colaborativo, trabajan en ramas y al finalizar se unen al main  
 Ojo: Una rama es un puntero que apunta a un commit.
  
Clase 3
(fast-forward = fusionar ramas,mueve puntero de la que estamos a la rama que estamos mergeando)
-Fusionar ramas .- Dos ramas se comparan linea por linea y se unen,y se genera un commit automatico,
puede haber conflictos, en general sucede cuando estas trabajando en un mismo archivo. Tambien se puede eliminar una rama.

                                         IMAGEN                      

Clase 4
-GitHub .- Software en la nube que esta integrado con git. Se utiliza para gestionar, trabajar colaborativamente, entre otras; con  repositorios de Git.

                                         IMAGEN

-Repositorios remotos .- Repos hospedados en un servidor, punto de sincronizacion de repos locales    
Observacion: Un repoLocal puede enlazarse a varios reposRemotos     
-Llave SSH = firma .- Se usa para autentificarse de forma segura, entre tu compu y un servidor, evita escribir usuario y contras√±a cada vez, es muy segura.   
  Clonar un Repositorio .- Podemos descargar un repo remoto a nuestro escritorio
-Push/Pull/PullRequest .-
  *Escribir en un repoRemoto .- Podemos trabajar localmente y subir un commit al repoRemoto, Push=Empujar
  Crear ramaRemota .- Hacemos una rama local y luego la subimos a la RepoRemota
  Eliminar ramasRemota .- se lo puede hacer desde gitHub, actualizar/eliminar la referencia que hay en Repolocal de que aun existe dicha rama
  *Traer cambios de repoRemoto a local .- Util en trabajo colaborativo ya que traes cambios que alguien a subido Pull=Jalar.
  *PullRequest/PR .- Solicitud para fusionar una rama con otra en un repo, en gitHub en este caso, y alguien revisa el codigo antes de integrarlo. Esto puedes hacerlo desde gitHub por facilidad.
Observacion: Tanto el push como el pull puenden dar conflictos, similare a cuando hacemos merge..., porque en si son como fusiones pero en repoRemotos 

